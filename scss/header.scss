@function toRem($value) {
	$baseFontSize: 16;
	@return ($value/$baseFontSize) * 1rem;
}

.header {
	border: 1px solid #b9cce5;
	width: 100vw;
	height: auto;
	padding: toRem(10) toRem(50);
	background-color: #e6f0fa;
	background-image: url("https://www.transparenttextures.com/patterns/broken-noise.png");
	top: toRem(20);
	left: 0;
	position: fixed;
	z-index: 10000;
	// background-color: #e6f0fa;
	// background-image: url("https://www.transparenttextures.com/patterns/buried.png");
	/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */

	&__container {
		display: flex;
	}

	&__nav {
		display: flex;
		align-items: center;
		justify-content: space-around;
	}
	&__nav--admin {
		position: relative;
		display: inline-block;
		display: flex;

		& button {
			width: toRem(350);
			height: toRem(50);
			padding: toRem(10);
			font-family: "My3";
			letter-spacing: 2px;
			clip-path: polygon(20% 0%, 100% 0%, 80% 100%, 0% 100%);
			color: #333333;
			font-size: toRem(28);
			background-color: rgba(0, 128, 0, 0);
			box-shadow: 0px 0px 12px #333333 inset;
			transition: 0.5s ease-in-out;

			&:hover {
				clip-path: polygon(0% 0%, 80% 0%, 100% 100%, 20% 100%);
			}

			// нужно завязаться на сам тег button
			&:hover + .admin--info {
				display: block;
				z-index: 999;
			}
		}
	}
	&__nav--form {
		opacity: 0;

		& button {
			padding: toRem(10);
			font-size: toRem(24);
			background-color: rgba(0, 128, 0, 0);
			color: #333333;
			border-radius: toRem(10);
		}
		& .enter {
			margin: 0 toRem(20);
			box-shadow: 0px 0px 12px greenyellow;
			&:hover {
				box-shadow: 0px 0px 6px greenyellow inset;
			}
		}

		& .off--admin {
			box-shadow: 0px 0px 6px rgb(233, 8, 8);
			border: 0px 0px solid red;
			&:hover {
				box-shadow: 0px 0px 6px rgb(233, 8, 8) inset;
			}
		}
		& label {
			font-size: toRem(24);
			color: #333333;
		}
		& input {
			width: toRem(100);
			padding: toRem(10);
			font-size: toRem(24);
			border-radius: toRem(10);
			&:hover {
				background-color: rgb(172, 178, 172);
			}
		}
	}
	&__nav--nav {
		width: 100%;
		display: flex;
		align-items: center;
		justify-content: space-around;
		color: #333333;
		font-size: toRem(24);

		& a {
			color: #1a252f;
			font-size: toRem(24);
			font-weight: 900;
			text-shadow: 0px 0px 6px white;
		}
	}
}
.admin--info {
	display: none;
	position: absolute;
	top: -200%;
	left: 0;
	width: 300%;
	padding: toRem(10);
	background-color: rgb(247, 251, 247);

	& p {
		font-size: toRem(24);
	}
}
.header__nav--korz {
	position: fixed;
	top: 10%;
	right: 0%;
	width: toRem(80);

	& button {
		background-color: rgba(255, 255, 255, 0);

		&:hover {
			+ div {
				display: flex;
				z-index: 999999999;
			}
		}
	}
	& img {
		width: 100%;
	}
	& div {
		position: absolute;
		top: 120%;
		left: -150%;
		// transform: translate(-50%);
		width: 220%;
		border: 1px solid white;
		background-color: rgba(10, 168, 134, 0.547);
		padding: toRem(10);
		display: none;
		text-align: center;
		color: white;

		& p {
			text-shadow: 0px 0px 6px black;
		}
	}
}

.contact--block {
	// width: auto;
	display: flex;
	column-gap: toRem(20);
	align-items: center;
	// border: 1px solid white;
}
.co--img {
	// border: 1px solid white;
	width: toRem(100);
	overflow: hidden;
	& img {
		width: toRem(20);
		margin-left: -50%;
		animation: str 3s infinite ease-in-out;
	}
}

@keyframes str {
	0% {
		margin-left: -45%;
	}
	100% {
		margin-left: 110%;
	}
}
.all {
	display: flex;
	align-items: center;
	column-gap: toRem(20);

	& img {
		width: toRem(35);
		animation: bl 1s ease-in-out infinite;
	}
}
@keyframes bl {
	0% {
		transform: scale(1);
	}
	10% {
		transform: scale(1.1);
	}
	20% {
		transform: scale(1.1);
	}
	100% {
		transform: scale(1);
	}
}
